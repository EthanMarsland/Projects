// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "Public/TCPConnectionPlugin.h"
#include "TCPConnectionPlugin.generated.dep.h"
PRAGMA_DISABLE_OPTIMIZATION
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1TCPConnectionPlugin() {}
	void UTCPListenComponent::StaticRegisterNativesUTCPListenComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UTCPListenComponent::StaticClass(), "getLocalIP",(Native)&UTCPListenComponent::execgetLocalIP);
		FNativeFunctionRegistrar::RegisterFunction(UTCPListenComponent::StaticClass(), "removeFirstReceivedIntData",(Native)&UTCPListenComponent::execremoveFirstReceivedIntData);
		FNativeFunctionRegistrar::RegisterFunction(UTCPListenComponent::StaticClass(), "ReturnReceivedIntData",(Native)&UTCPListenComponent::execReturnReceivedIntData);
		FNativeFunctionRegistrar::RegisterFunction(UTCPListenComponent::StaticClass(), "TCPConnectionListener",(Native)&UTCPListenComponent::execTCPConnectionListener);
		FNativeFunctionRegistrar::RegisterFunction(UTCPListenComponent::StaticClass(), "TCPSocketListener",(Native)&UTCPListenComponent::execTCPSocketListener);
	}
	IMPLEMENT_CLASS(UTCPListenComponent, 179814349);
	void UTCPSendComponent::StaticRegisterNativesUTCPSendComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UTCPSendComponent::StaticClass(), "sendData",(Native)&UTCPSendComponent::execsendData);
		FNativeFunctionRegistrar::RegisterFunction(UTCPSendComponent::StaticClass(), "setIPAddress",(Native)&UTCPSendComponent::execsetIPAddress);
		FNativeFunctionRegistrar::RegisterFunction(UTCPSendComponent::StaticClass(), "StartupNetworking",(Native)&UTCPSendComponent::execStartupNetworking);
		FNativeFunctionRegistrar::RegisterFunction(UTCPSendComponent::StaticClass(), "TCPConnectionSender",(Native)&UTCPSendComponent::execTCPConnectionSender);
		FNativeFunctionRegistrar::RegisterFunction(UTCPSendComponent::StaticClass(), "TCPSocketSender",(Native)&UTCPSendComponent::execTCPSocketSender);
	}
	IMPLEMENT_CLASS(UTCPSendComponent, 3963521599);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_UActorComponent();

	TCPCONNECTIONPLUGIN_API class UFunction* Z_Construct_UFunction_UTCPListenComponent_getLocalIP();
	TCPCONNECTIONPLUGIN_API class UFunction* Z_Construct_UFunction_UTCPListenComponent_removeFirstReceivedIntData();
	TCPCONNECTIONPLUGIN_API class UFunction* Z_Construct_UFunction_UTCPListenComponent_ReturnReceivedIntData();
	TCPCONNECTIONPLUGIN_API class UFunction* Z_Construct_UFunction_UTCPListenComponent_TCPConnectionListener();
	TCPCONNECTIONPLUGIN_API class UFunction* Z_Construct_UFunction_UTCPListenComponent_TCPSocketListener();
	TCPCONNECTIONPLUGIN_API class UClass* Z_Construct_UClass_UTCPListenComponent_NoRegister();
	TCPCONNECTIONPLUGIN_API class UClass* Z_Construct_UClass_UTCPListenComponent();
	TCPCONNECTIONPLUGIN_API class UFunction* Z_Construct_UFunction_UTCPSendComponent_sendData();
	TCPCONNECTIONPLUGIN_API class UFunction* Z_Construct_UFunction_UTCPSendComponent_setIPAddress();
	TCPCONNECTIONPLUGIN_API class UFunction* Z_Construct_UFunction_UTCPSendComponent_StartupNetworking();
	TCPCONNECTIONPLUGIN_API class UFunction* Z_Construct_UFunction_UTCPSendComponent_TCPConnectionSender();
	TCPCONNECTIONPLUGIN_API class UFunction* Z_Construct_UFunction_UTCPSendComponent_TCPSocketSender();
	TCPCONNECTIONPLUGIN_API class UClass* Z_Construct_UClass_UTCPSendComponent_NoRegister();
	TCPCONNECTIONPLUGIN_API class UClass* Z_Construct_UClass_UTCPSendComponent();
	TCPCONNECTIONPLUGIN_API class UPackage* Z_Construct_UPackage__Script_TCPConnectionPlugin();
	UFunction* Z_Construct_UFunction_UTCPListenComponent_getLocalIP()
	{
		struct TCPListenComponent_eventgetLocalIP_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UTCPListenComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("getLocalIP"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(TCPListenComponent_eventgetLocalIP_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, TCPListenComponent_eventgetLocalIP_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Network"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TCPListenComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns the computers IPAddress as string"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTCPListenComponent_removeFirstReceivedIntData()
	{
		UObject* Outer=Z_Construct_UClass_UTCPListenComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("removeFirstReceivedIntData"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Network"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TCPListenComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("delete the first array in our recieved data\ncall this function when the data is no longer needed"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTCPListenComponent_ReturnReceivedIntData()
	{
		struct TCPListenComponent_eventReturnReceivedIntData_Parms
		{
			TArray<int32> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UTCPListenComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReturnReceivedIntData"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(TCPListenComponent_eventReturnReceivedIntData_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, TCPListenComponent_eventReturnReceivedIntData_Parms), 0x0010000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Network"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TCPListenComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("get the recieved data"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTCPListenComponent_TCPConnectionListener()
	{
		UObject* Outer=Z_Construct_UClass_UTCPListenComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TCPConnectionListener"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TCPListenComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Timer functions, could be threads"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTCPListenComponent_TCPSocketListener()
	{
		UObject* Outer=Z_Construct_UClass_UTCPListenComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TCPSocketListener"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TCPListenComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UTCPListenComponent_NoRegister()
	{
		return UTCPListenComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UTCPListenComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_TCPConnectionPlugin();
			OuterClass = UTCPListenComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UTCPListenComponent_getLocalIP());
				OuterClass->LinkChild(Z_Construct_UFunction_UTCPListenComponent_removeFirstReceivedIntData());
				OuterClass->LinkChild(Z_Construct_UFunction_UTCPListenComponent_ReturnReceivedIntData());
				OuterClass->LinkChild(Z_Construct_UFunction_UTCPListenComponent_TCPConnectionListener());
				OuterClass->LinkChild(Z_Construct_UFunction_UTCPListenComponent_TCPSocketListener());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_m_BufferSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("m_BufferSize"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(m_BufferSize, UTCPListenComponent), 0x0020080000000005);
				UProperty* NewProp_m_Port = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("m_Port"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(m_Port, UTCPListenComponent), 0x0020080000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTCPListenComponent_getLocalIP(), "getLocalIP"); // 4178702576
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTCPListenComponent_removeFirstReceivedIntData(), "removeFirstReceivedIntData"); // 4250902248
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTCPListenComponent_ReturnReceivedIntData(), "ReturnReceivedIntData"); // 2117865642
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTCPListenComponent_TCPConnectionListener(), "TCPConnectionListener"); // 4073988010
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTCPListenComponent_TCPSocketListener(), "TCPSocketListener"); // 3416840150
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TCPListenComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/TCPListenComponent.h"));
				MetaData->SetValue(NewProp_m_BufferSize, TEXT("Category"), TEXT("NetworkStats"));
				MetaData->SetValue(NewProp_m_BufferSize, TEXT("ModuleRelativePath"), TEXT("Public/TCPListenComponent.h"));
				MetaData->SetValue(NewProp_m_BufferSize, TEXT("ToolTip"), TEXT("Size of data being sent/recieved"));
				MetaData->SetValue(NewProp_m_Port, TEXT("Category"), TEXT("NetworkStats"));
				MetaData->SetValue(NewProp_m_Port, TEXT("ModuleRelativePath"), TEXT("Public/TCPListenComponent.h"));
				MetaData->SetValue(NewProp_m_Port, TEXT("ToolTip"), TEXT("Port used for connection connect"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTCPListenComponent(Z_Construct_UClass_UTCPListenComponent, &UTCPListenComponent::StaticClass, TEXT("UTCPListenComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTCPListenComponent);
	UFunction* Z_Construct_UFunction_UTCPSendComponent_sendData()
	{
		struct TCPSendComponent_eventsendData_Parms
		{
			uint8 label;
			TArray<uint8> OutputData;
		};
		UObject* Outer=Z_Construct_UClass_UTCPSendComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("sendData"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(TCPSendComponent_eventsendData_Parms));
			UProperty* NewProp_OutputData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OutputData"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(OutputData, TCPSendComponent_eventsendData_Parms), 0x0010000000000080);
			UProperty* NewProp_OutputData_Inner = new(EC_InternalUseOnlyConstructor, NewProp_OutputData, TEXT("OutputData"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_label = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("label"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(label, TCPSendComponent_eventsendData_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Network"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TCPSendComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("label is what the data we're sending is e.g. health or position\noutput data is the data we're sending"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTCPSendComponent_setIPAddress()
	{
		struct TCPSendComponent_eventsetIPAddress_Parms
		{
			FString newIP;
		};
		UObject* Outer=Z_Construct_UClass_UTCPSendComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("setIPAddress"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(TCPSendComponent_eventsetIPAddress_Parms));
			UProperty* NewProp_newIP = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newIP"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(newIP, TCPSendComponent_eventsetIPAddress_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Network"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TCPSendComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("set the IPAddress"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTCPSendComponent_StartupNetworking()
	{
		UObject* Outer=Z_Construct_UClass_UTCPSendComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StartupNetworking"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Network"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TCPSendComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTCPSendComponent_TCPConnectionSender()
	{
		UObject* Outer=Z_Construct_UClass_UTCPSendComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TCPConnectionSender"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TCPSendComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Timer functions, could be threads"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTCPSendComponent_TCPSocketSender()
	{
		UObject* Outer=Z_Construct_UClass_UTCPSendComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TCPSocketSender"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/TCPSendComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UTCPSendComponent_NoRegister()
	{
		return UTCPSendComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UTCPSendComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_TCPConnectionPlugin();
			OuterClass = UTCPSendComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UTCPSendComponent_sendData());
				OuterClass->LinkChild(Z_Construct_UFunction_UTCPSendComponent_setIPAddress());
				OuterClass->LinkChild(Z_Construct_UFunction_UTCPSendComponent_StartupNetworking());
				OuterClass->LinkChild(Z_Construct_UFunction_UTCPSendComponent_TCPConnectionSender());
				OuterClass->LinkChild(Z_Construct_UFunction_UTCPSendComponent_TCPSocketSender());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_m_BufferSize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("m_BufferSize"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(m_BufferSize, UTCPSendComponent), 0x0020080000000005);
				UProperty* NewProp_m_Port = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("m_Port"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(m_Port, UTCPSendComponent), 0x0020080000000005);
				UProperty* NewProp_IPAddressString = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IPAddressString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(IPAddressString, UTCPSendComponent), 0x0020080000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTCPSendComponent_sendData(), "sendData"); // 4086209
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTCPSendComponent_setIPAddress(), "setIPAddress"); // 237443006
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTCPSendComponent_StartupNetworking(), "StartupNetworking"); // 1033743850
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTCPSendComponent_TCPConnectionSender(), "TCPConnectionSender"); // 899857319
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTCPSendComponent_TCPSocketSender(), "TCPSocketSender"); // 4038491874
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Custom"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("TCPSendComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/TCPSendComponent.h"));
				MetaData->SetValue(NewProp_m_BufferSize, TEXT("Category"), TEXT("NetworkStats"));
				MetaData->SetValue(NewProp_m_BufferSize, TEXT("ModuleRelativePath"), TEXT("Public/TCPSendComponent.h"));
				MetaData->SetValue(NewProp_m_BufferSize, TEXT("ToolTip"), TEXT("Size of data being sent/recieved"));
				MetaData->SetValue(NewProp_m_Port, TEXT("Category"), TEXT("NetworkStats"));
				MetaData->SetValue(NewProp_m_Port, TEXT("ModuleRelativePath"), TEXT("Public/TCPSendComponent.h"));
				MetaData->SetValue(NewProp_m_Port, TEXT("ToolTip"), TEXT("Port used for connection"));
				MetaData->SetValue(NewProp_IPAddressString, TEXT("Category"), TEXT("NetworkStats"));
				MetaData->SetValue(NewProp_IPAddressString, TEXT("ModuleRelativePath"), TEXT("Public/TCPSendComponent.h"));
				MetaData->SetValue(NewProp_IPAddressString, TEXT("ToolTip"), TEXT("IP and Port\nIPAddress of host"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTCPSendComponent(Z_Construct_UClass_UTCPSendComponent, &UTCPSendComponent::StaticClass, TEXT("UTCPSendComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTCPSendComponent);
	UPackage* Z_Construct_UPackage__Script_TCPConnectionPlugin()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/TCPConnectionPlugin")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0xF231D942;
			Guid.B = 0x77DEF753;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
